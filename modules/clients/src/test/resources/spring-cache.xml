<?xml version="1.0" encoding="UTF-8"?>

<!--
    _________        _____ __________________        _____
    __  ____/___________(_)______  /__  ____/______ ____(_)_______
    _  / __  __  ___/__  / _  __  / _  / __  _  __ `/__  / __  __ \
    / /_/ /  _  /    _  /  / /_/ /  / /_/ /  / /_/ / _  /  _  / / /
    \____/   /_/     /_/   \_,__/   \____/   \__,_/  /_/   /_/ /_/

    
 Copyright (C) GridGain Systems. All Rights Reserved.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

    Version: @xml.file.version
-->

<!--
    GridGain Spring configuration file to startup grid cache.

    When starting a standalone GridGain node, you need to execute the following command:
    {GRIDGAIN_HOME}/bin/ggstart.{bat|sh} examples/config/example-cache.xml

    When starting GridGain from Java IDE, pass path to this file into GridGain:
    GridGain.start("examples/config/example-cache.xml");
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--
        Configuration below demonstrates how to setup caches within grid nodes.
    -->
    <bean id="grid.cfg" class="org.gridgain.grid.GridConfiguration">
        <property name="deploymentMode" value="SHARED"/>

        <!--
            For better performance set this property to false in case
            peer deployment is not used.
            Default value is true.
        -->
        <property name="peerClassLoadingEnabled" value="true"/>


        <!-- Set to local host address just for examples. -->
        <property name="localHost" value="127.0.0.1"/>

        <!--
            Allow indexing SPI to index primitive values.
        -->
        <property name="indexingSpi">
            <list>
                <bean class="org.gridgain.grid.spi.indexing.h2.GridH2IndexingSpi">
                    <!-- Index primitives. -->
                    <property name="defaultIndexPrimitiveKey" value="true"/>

                    <!--
                        Set to false to allow different key types for one value type.

                        Note that this also means that '_key' column cannot participate in
                        where clause queries either directly through API, through JDBC driver,
                        or through Object Viewer in Visor DevOps Console.
                    -->
                    <!--property name="defaultIndexFixedTyping" value="false"/-->
                </bean>
            </list>
        </property>

        <!-- Client configuration. -->
        <property name="clientConnectionConfiguration">
            <bean class="org.gridgain.grid.GridClientConnectionConfiguration"/>
        </property>

        <property name="cacheConfiguration">
            <!--
                Specify list of cache configurations here. Any property from
                GridCacheConfiguration interface can be configured here.
                Note that absolutely all configuration properties are optional.
            -->
            <list>
                <!--
                    Partitioned cache example configuration (Transactional mode).
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfiguration">
                    <property name="name" value="partitioned"/>

                    <property name="cacheMode" value="PARTITIONED"/>

                    <!-- Transactional updates supported. -->
                    <property name="atomicityMode" value="TRANSACTIONAL"/>

                    <!-- Enable near cache to cache recently accessed data. -->
                    <property name="distributionMode" value="NEAR_PARTITIONED"/>

                    <!-- Initial cache size. -->
                    <property name="startSize" value="1500000"/>

                    <!--
                        Setting this value will cause local node to wait for remote commits.
                        However, it's important to set it this way in the examples as we assert on
                        conditions that usually assume full completion of transactions on all nodes.
                    -->
                    <property name="writeSynchronizationMode" value="FULL_SYNC"/>

                    <!--
                        For better performance set this property to false in case
                        cache queries are not used.
                        Default value is true.
                    -->
                    <property name="queryIndexEnabled" value="true"/>

                    <!--
                        This shows how to configure number of backups. The below configuration
                        sets the number of backups to 1 (which is default).
                    -->
                    <property name="backups" value="1"/>

                    <!-- Set synchronous preloading (default is asynchronous). -->
                    <property name="preloadMode" value="SYNC"/>
                </bean>

                <!--
                    Replicated cache example configuration.
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfiguration">
                    <property name="name" value="replicated"/>

                    <property name="atomicityMode" value="TRANSACTIONAL"/>

                    <!--
                        Setting this value will cause local node to wait for remote commits.
                        However, it's important to set it this way in the examples as we assert on
                        conditions that usually assume full completion of transactions on all nodes.
                    -->
                    <property name="writeSynchronizationMode" value="FULL_SYNC"/>

                    <!-- REPLICATED cache mode. -->
                    <property name="cacheMode" value="REPLICATED"/>

                    <!-- Set synchronous preloading (default is asynchronous). -->
                    <property name="preloadMode" value="SYNC"/>

                    <!-- Initial cache size. -->
                    <property name="startSize" value="150000"/>
                </bean>

                <!--
                    Local cache example configuration.
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfiguration">
                    <!-- Cache name is 'local'. -->
                    <property name="name" value="local"/>

                    <!-- LOCAL cache mode. -->
                    <property name="cacheMode" value="LOCAL"/>

                    <!-- Initial cache size. -->
                    <property name="startSize" value="150000"/>
                </bean>
            </list>
        </property>

        <!--
            Uncomment this to provide TCP discovery SPI (Amazon EC2).
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.s3.GridTcpDiscoveryS3IpFinder">
                        <property name="awsCredentials">
                            <bean class="com.amazonaws.auth.BasicAWSCredentials">
                                <constructor-arg value="YOUR_ACCESS_KEY_ID" />
                                <constructor-arg value="YOUR_SECRET_ACCESS_KEY" />
                            </bean>
                        </property>
                        <property name="bucketName" value="YOUR_BUCKET_NAME_IP_FINDER"/>
                    </bean>
                </property>
                <property name="heartbeatFrequency" value="2000"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide TCP discovery SPI (Local network).

            If path to shared file system is not explicitly provided,
            then only local nodes will be able to discover each other.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.sharedfs.GridTcpDiscoverySharedFsIpFinder">
                        <property name="path" value="work/disco/tcp"/>
                    </bean>
                </property>
            </bean>
        </property>
        -->

        <!--
            TCP discovery SPI configuration with predefined addresses.
            Use the addresses list to provide IP addresses of initial nodes in the grid
            (at least one address must be provided).

            Note:
            =====
            If running in distributed environment, you should change IP addresses to the actual IP addresses
            of the servers on your network. Not all addresses need to be specified, only the addresses
            of one or more servers which will always be started first.
        -->
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.vm.GridTcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <!--
                                    List all IP/port configurations that potentially
                                    can be started first in examples. We are assuming
                                    grid of size 10 or less.
                                -->
                                <value>127.0.0.1:47500</value>
                                <value>127.0.0.1:47501</value>
                                <value>127.0.0.1:47502</value>
                                <value>127.0.0.1:47503</value>
                                <value>127.0.0.1:47504</value>
                                <value>127.0.0.1:47505</value>
                                <value>127.0.0.1:47506</value>
                                <value>127.0.0.1:47507</value>
                                <value>127.0.0.1:47508</value>
                                <value>127.0.0.1:47509</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>

        <property name="portableConfiguration">
            <bean class="org.gridgain.grid.portables.GridPortableConfiguration">
                <property name="typeConfigurations">
                    <list>
                        <bean class="org.gridgain.grid.portables.GridPortableTypeConfiguration">
                            <property name="className" value="org.gridgain.client.GridClientTestPortable"/>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>
    </bean>
</beans>
