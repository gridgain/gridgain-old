<?xml version="1.0" encoding="UTF-8"?>

<!--
    _________        _____ __________________        _____
    __  ____/___________(_)______  /__  ____/______ ____(_)_______
    _  / __  __  ___/__  / _  __  / _  / __  _  __ `/__  / __  __ \
    / /_/ /  _  /    _  /  / /_/ /  / /_/ /  / /_/ / _  /  _  / / /
    \____/   /_/     /_/   \_,__/   \____/   \__,_/  /_/   /_/ /_/

    
 Copyright (C) GridGain Systems. All Rights Reserved.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

    Version: @xml.file.version
-->

<!--
    GridGain Spring configuration file for testing ping pong example.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">
    <bean id="grid.cfg" class="org.gridgain.grid.GridConfiguration">
        <property name="gridName" value="partner"/>

        <!-- Set to local host address just for examples. -->
        <property name="localHost" value="127.0.0.1"/>

        <!-- Set deployment mode to be able to deploy jobs and tasks on that node. -->
        <property name="deploymentMode" value="SHARED"/>

        <!--
            For better performance set this property to false in case
            peer deployment is not used.
            Default value is false.
        -->
        <property name="peerClassLoadingEnabled" value="true"/>

        <!--
            Configure optimized marshaller.
        -->
        <property name="marshaller">
            <bean class="org.gridgain.grid.marshaller.optimized.GridOptimizedMarshaller">
                <!--
                    For better performance set this property to true in case
                    all marshalled classes implement java.io.Serializable.
                    Default value is true.

                    Note, that it is recommended to implement java.io.Externalizable
                    instead of java.io.Serializable for smaller network footprint
                    and even better performance.
                -->
                <property name="requireSerializable" value="false"/>
            </bean>
        </property>

        <!--
            Enable cache events.
        -->
        <property name="includeEventTypes">
            <util:constant static-field="org.gridgain.grid.events.GridEventType.EVTS_CACHE"/>
        </property>

        <!--
            TCP discovery SPI configuration with predefined addresses.
            Use the addresses list to provide IP addresses of initial nodes in the grid
            (at least one address must be provided).

            Note:
            =====
            If running in distributed environment, you should change IP addresses to the actual IP addresses
            of the servers on your network. Not all addresses need to be specified, only the addresses
            of one or more servers which will always be started first.
        -->
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.vm.GridTcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <!--
                                    List all IP/port configurations that potentially
                                    can be started first in examples. We are assuming
                                    grid of size 10 or less.
                                -->
                                <value>127.0.0.1:47500</value>
                                <value>127.0.0.1:47501</value>
                                <value>127.0.0.1:47502</value>
                                <value>127.0.0.1:47503</value>
                                <value>127.0.0.1:47504</value>
                                <value>127.0.0.1:47505</value>
                                <value>127.0.0.1:47506</value>
                                <value>127.0.0.1:47507</value>
                                <value>127.0.0.1:47508</value>
                                <value>127.0.0.1:47509</value>
                            </list>
                        </property>
                    </bean>
                    <!--
                    Uncomment this to provide IP finder using multicast for nodes discovery.
                    In addition to addresses received via multicast this finder can work with pre-configured
                    list of addresses.
                    -->
                    <!--
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.multicast.GridTcpDiscoveryMulticastIpFinder">
                        <property name="addresses">
                            <list>
                                <value>host1:port1</value>
                                <value>host2:port2</value>
                            </list>
                        </property>
                    </bean>
                    -->
                </property>
            </bean>
        </property>

        <!--
            Allow indexing SPI to index primitive values.
        -->
        <property name="indexingSpi">
            <list>
                <bean class="org.gridgain.grid.spi.indexing.h2.GridH2IndexingSpi">
                    <!-- Index primitives. -->
                    <property name="defaultIndexPrimitiveKey" value="true"/>

                    <!--
                        Set to false to allow different key types for one value type.

                        Note that this also means that '_key' column cannot participate in
                        where clause queries either directly through API, through JDBC driver,
                        or through Object Viewer in Visor DevOps Console.
                    -->
                    <!--property name="defaultIndexFixedTyping" value="false"/-->
                </bean>
            </list>
        </property>
    </bean>
</beans>

