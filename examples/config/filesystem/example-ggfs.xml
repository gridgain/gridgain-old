<?xml version="1.0" encoding="UTF-8"?>

<!--
    _________        _____ __________________        _____
    __  ____/___________(_)______  /__  ____/______ ____(_)_______
    _  / __  __  ___/__  / _  __  / _  / __  _  __ `/__  / __  __ \
    / /_/ /  _  /    _  /  / /_/ /  / /_/ /  / /_/ / _  /  _  / / /
    \____/   /_/     /_/   \_,__/   \____/   \__,_/  /_/   /_/ /_/

    
 Copyright (C) GridGain Systems. All Rights Reserved.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

    Version: @xml.file.version
-->

<!--
    GridGain Spring configuration file to startup grid cache.

    When starting a standalone GridGain node, you need to execute the following command:
    {GRIDGAIN_HOME}/bin/ggstart.{bat|sh} examples/config/filesystem/example-ggfs.xml

    When starting GridGain from Java IDE, pass path to this file into GridGain:
    GridGain.start("examples/config/filesystem/example-ggfs.xml");
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!--
        Optional description.
    -->
    <description>
        Spring file for grid configuration with client available endpoints.
    </description>

    <!--
        Initialize property configurer so we can reference environment variables.
    -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_FALLBACK"/>
        <property name="searchSystemEnvironment" value="true"/>
    </bean>

    <!--
        Configuration below demonstrates how to setup a GGFS node with file data.
    -->
    <bean id="grid.cfg" class="org.gridgain.grid.GridConfiguration">
        <!-- Explicitly set to local host address. -->
        <property name="localHost" value="127.0.0.1"/>

        <property name="marshaller">
            <bean class="org.gridgain.grid.marshaller.optimized.GridOptimizedMarshaller">
                <!-- Set to false to allow non-serializable objects in examples, default is true. -->
                <property name="requireSerializable" value="false"/>
            </bean>
        </property>

        <property name="ggfsConfiguration">
            <list>
                <bean class="org.gridgain.grid.ggfs.GridGgfsConfiguration">
                    <property name="name" value="ggfs"/>
                    <property name="metaCacheName" value="ggfs-meta"/>
                    <property name="dataCacheName" value="ggfs-data"/>

                    <!-- Must correlate with cache affinity mapper. -->
                    <property name="blockSize" value="#{128 * 1024}"/>
                    <property name="perNodeBatchSize" value="512"/>
                    <property name="perNodeParallelBatchCount" value="16"/>

                    <!-- Set number of prefetch blocks. -->
                    <property name="prefetchBlocks" value="32"/>

                    <!--
                        This will disable IPC endpoint binding thus preventing Hadoop clients from connecting to GGFS.
                        With this option set to false the only possible way to interact with GGFS is through
                        GridGain API.
                    -->
                    <property name="ipcEndpointEnabled" value="false"/>

                    <!--
                        Example of configured IPC loopback endpoint.
                    -->
                    <!--
                    <property name="ipcEndpointConfiguration">
                        <map>
                            <entry key="type" value="tcp"/>
                        </map>
                    </property>
                    -->

                    <!--
                        Example of configured shared memory endpoint.
                    -->
                    <!--
                    <property name="ipcEndpointConfiguration">
                        <map>
                            <entry key="type" value="shmem"/>
                            <entry key="port" value="10500"/>
                        </map>
                    </property>
                    -->
                </bean>
            </list>
        </property>

        <property name="cacheConfiguration">
            <list>
                <bean class="org.gridgain.grid.cache.GridCacheConfiguration">
                    <property name="name" value="ggfs-data"/>
                    <property name="cacheMode" value="PARTITIONED"/>
                    <property name="atomicityMode" value="TRANSACTIONAL"/>
                    <property name="queryIndexEnabled" value="false"/>
                    <property name="writeSynchronizationMode" value="FULL_SYNC"/>
                    <property name="distributionMode" value="PARTITIONED_ONLY"/>
                    <property name="backups" value="0"/>
                    <property name="affinityMapper">
                        <bean class="org.gridgain.grid.ggfs.GridGgfsGroupDataBlocksKeyMapper">
                            <!-- Haw many blocks in row will be stored on the same node. -->
                            <constructor-arg value="512"/>
                        </bean>
                    </property>
                </bean>

                <bean class="org.gridgain.grid.cache.GridCacheConfiguration">
                    <property name="name" value="ggfs-meta"/>
                    <property name="cacheMode" value="REPLICATED"/>
                    <property name="atomicityMode" value="TRANSACTIONAL"/>
                    <property name="queryIndexEnabled" value="false"/>
                    <property name="writeSynchronizationMode" value="FULL_SYNC"/>
                </bean>
            </list>
        </property>

        <!-- Explicitly configure TCP discovery SPI to provide list of initial nodes. -->
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <!--
                        GridGain provides several options for automatic discovery that can be used
                        instead os static IP based discovery. For information on all options refer
                        to our documentation: http://doc.gridgain.org/latest/Automatic+Node+Discovery
                    -->
                    <!-- Uncomment multicast IP finder to enable multicast-based discovery of initial nodes. -->
                    <!--<bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.multicast.GridTcpDiscoveryMulticastIpFinder">-->
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.vm.GridTcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <!-- In distributed environment, replace with actual host IP address. -->
                                <value>127.0.0.1:47500..47509</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
</beans>
