/* 
 Copyright (C) GridGain Systems. All Rights Reserved.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/*  _________        _____ __________________        _____
 *  __  ____/___________(_)______  /__  ____/______ ____(_)_______
 *  _  / __  __  ___/__  / _  __  / _  / __  _  __ `/__  / __  __ \
 *  / /_/ /  _  /    _  /  / /_/ /  / /_/ /  / /_/ / _  /  _  / / /
 *  \____/   /_/     /_/   \_,__/   \____/   \__,_/  /_/   /_/ /_/
 */

/**
 * <summary>
 * This example demonstrates use of GridGain C++ remote client API. To compile this example
 * you first need to compile the API, located in GRIDGAIN_HOME/modules/clients/cpp (see README
 * file for compilation instructions).
 * <p>
 * To execute this example you should start one or more instances of <c>ClientExampleNodeStartup</c>
 * Java class which will start up a GridGain node with proper configuration (you can compile
 * and run this class from your favourite IDE).
 * <p>
 * You can also start a stand-alone GridGain instance by passing the path
 * to configuration file to <c>ggstart.{sh|bat}</c> script, like so:
 * <c>ggstart.sh examples/config/example-cache.xml'</c>.
 * <p>
 * Note that this example requires <c>org.gridgain.examples.misc.client.api.ClientExampleTask</c>
 * class to be present in remote nodes' classpath. If remote nodes are run by <c>ggstart.{sh|bat}</c> script
 * then JAR file containing the examples code should be placed to <c>GRIDGAIN_HOME/libs</c> folder.
 * You can build <c>gridgain-examples.jar</c> by running <c>mvn package</c> in <c>GRIDGAIN_HOME/examples</c>
 * folder. After that <c>gridgain-examples.jar</c> will be generated by Maven in
 * <c>GRIDGAIN_HOME/examples/target</c> folder.
 * <p>
 * Before starting nodes you also need to enable <c>gridgain-protobuf</c> module. Simply move
 * <c>libs/optional/gridgain-protobuf<c> folder to <c>libs<c> folder so that the module is added to classpath.
 * <p>
 * After node has been started this example creates a client connection and performs some
 * Compute Grid related operations.
 * </summary>
 */

#include "gridclientapiexample.hpp"

#include <vector>

using namespace std;

GridClientConfiguration clientConfiguration() {
    GridClientConfiguration clientConfig;

    vector<GridClientSocketAddress> servers;

//    To enable communication with GridGain instance by HTTP, not by TCP, uncomment the following lines
//    and comment push_back with TCP.
//    ================================
//    GridClientProtocolConfiguration protoCfg;
//
//    protoCfg.protocol(HTTP);
//
//    clientConfig.setProtocolConfiguration(protoCfg);
//
//    servers.push_back(GridSocketAddress(SERVER_ADDRESS, GridClientProtocolConfiguration::DFLT_HTTP_PORT));

    for (int i = TCP_PORT; i < TCP_PORT + MAX_NODES; i++)
        servers.push_back(GridClientSocketAddress(SERVER_ADDRESS, i));

    clientConfig.servers(servers);

    return clientConfig;
}
